// prosemirror-keymap@1.2.2 downloaded from https://ga.jspm.io/npm:prosemirror-keymap@1.2.2/dist/index.js

import{keyName as e,base as t}from"w3c-keyname";import{Plugin as r}from"prosemirror-state";const i="undefined"!=typeof navigator&&/Mac|iP(hone|[oa]d)/.test(navigator.platform);function normalizeKeyName(e){let t=e.split(/-(?!$)/),r=t[t.length-1];"Space"==r&&(r=" ");let n,o,a,l;for(let e=0;e<t.length-1;e++){let r=t[e];if(/^(cmd|meta|m)$/i.test(r))l=true;else if(/^a(lt)?$/i.test(r))n=true;else if(/^(c|ctrl|control)$/i.test(r))o=true;else if(/^s(hift)?$/i.test(r))a=true;else{if(!/^mod$/i.test(r))throw new Error("Unrecognized modifier name: "+r);i?l=true:o=true}}n&&(r="Alt-"+r);o&&(r="Ctrl-"+r);l&&(r="Meta-"+r);a&&(r="Shift-"+r);return r}function normalize(e){let t=Object.create(null);for(let r in e)t[normalizeKeyName(r)]=e[r];return t}function modifiers(e,t,r=true){t.altKey&&(e="Alt-"+e);t.ctrlKey&&(e="Ctrl-"+e);t.metaKey&&(e="Meta-"+e);r&&t.shiftKey&&(e="Shift-"+e);return e}function keymap(e){return new r({props:{handleKeyDown:keydownHandler(e)}})}function keydownHandler(r){let i=normalize(r);return function(r,n){let o,a=e(n),l=i[modifiers(a,n)];if(l&&l(r.state,r.dispatch,r))return true;if(1==a.length&&" "!=a){if(n.shiftKey){let e=i[modifiers(a,n,false)];if(e&&e(r.state,r.dispatch,r))return true}if((n.shiftKey||n.altKey||n.metaKey||a.charCodeAt(0)>127)&&(o=t[n.keyCode])&&o!=a){let e=i[modifiers(o,n)];if(e&&e(r.state,r.dispatch,r))return true}}return false}}export{keydownHandler,keymap};

